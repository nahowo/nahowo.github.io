---
layout: post
title: "[BOJ] 13300: 방 배정"
date: 2024-1-3 14:14
category: PS
toc: true
toc_sticky: true
---
<!-- ## :  -->
[문제 링크](https://www.acmicpc.net/problem/13300)

### 문제 설명

수학여행 방을 배정할 때, 학년별로/성별별로 방을 배정하려고 한다. 한 방에 배정 가능한 최대 인원 수가 주어질 때 필요한 방의 최소 개수를 구해보자. 

### 나의 풀이

```python
import sys
input=sys.stdin.readline

total_room=0
room=[0]*12
n,p=map(int,input().split())
for i in range(n):
    s,y=map(int,input().split())
    room[s*6+(y-1)]+=1

for i in range(12):
    if room[i]%p==0:
        total_room+=room[i]//p
    else:
        total_room+=(room[i]//p)+1

print(total_room)
```

room 배열에 12개의 공간을 만들어 두고, 여자 1~6학년, 남자 1~6학년 명수를 세서 해당 인덱스에 삽입한다. 

다음에 각 인덱스 별로 방을 몇 개씩 필요로 하는지 세야 했는데, 이때 코드 길이를 한 줄 줄여보겠다고 꼼수를 쓰는 바람에 시간을 엄청 낭비하게 되었다…

```python
if i[1]<=p:
        total_room+=1
    else:
        total_room+=int((i[1]/p)+0.5)
```

처음에 위와 같은 로직을 사용했는데, 반올림 시에 0.5를 더한 값에 int를 적용하면 한 자리 반올림이 가능하다. 하지만 n과 k의 범위가 1000까지였기 때문에, n이 1000이고 k가 999인 경우에는 소수점이 15자리나 되어서 해당 로직이 통하지 않는다. 위의 로직을 사용한다면 0.5를 더한 값을 바로 int로 변환하지 않고 ceil를 사용하여 반올림해야 했을 것 같다. 

기존에 [solved.ac 문제](https://www.acmicpc.net/problem/18110)에서 반올림을 계산할 때, 0.5를 더하는 방식으로 해결했었기 때문에 반올림 방식에 문제가 있다고 생각하지 않은 것 같다. 사실 문제가 수학적으로 증명이 가능한 문제라서 수학식에 문제가 있을 수밖에 없는데… 어디에 문제가 있는지 찾아낼 때 항상 생각하고 논리적으로 접근해 보자. 

### 시간복잡도

O(n)이다.