---
layout: post
title: "[BOJ] 31066: 비 오는 날"
date: "2024-1-24 12:47"
category: "PS"
toc: true
toc_sticky: true
---
### [BOJ] 31066: 비 오는 날

[문제 링크](https://www.acmicpc.net/problem/31066)

### 문제 설명

비 오는 날 m개의 우산을 가진 n명의 학생이 창의인재관에서 융합인재관으로 모두 건너가려고 한다. 건물 사이에서 이동하는 시행을 최소 몇 번 반복해야 하는지 구해보자. 만약 시행을 계속 거듭함에도 모든 학생이 융합인재관으로 이동할 수 없다면 -1을 출력한다. 

### 나의 풀이

```python
import sys
input=sys.stdin.readline

def func():
    n,m,k=map(int,input().split())
    a,b,c,d=n,m,0,0
    cnt=0
    if k==1 and m==1 and n>m:
        return -1
    
    while True:
        # 창의인재관 -> 융합인재관
        x=min(k*m,a)
        y=m
        a-=x
        b-=y
        c+=x
        d+=y
        cnt+=1
        if c==n:
            break
        
        # 융합인재관 -> 창의인재관
        z=1
        w=m
        a+=z
        b+=w
        c-=z
        d-=w
        cnt+=1
    return cnt

t=int(input())
for _ in range(t):
    print(func())
```

처음에 계속 헷갈려서 변수가 낭비되더라도 가독성이 좋도록 코드를 작성하였다. 

우선 창의 → 융합의 경우에는 가능한 우산을 전부 사용하여 ‘우산 수*우산 개당 허용 가능한 사람 수’가 건너가도록 하였다. 이런 시행 후에 융합인재관에 모든 학생이 있다면 break로 while문을 빠져나온다. 

융합 → 창의의 경우에는 한 사람이 모든 우산을 가져오는 것이 최적이다. 1명이 창의인재관으로 다시 건너가기 때문에 융합인재관에는 최대 n-1 명의 학생이 존재한다. 

불가능한 경우에 대한 조건을 잘못 줘서 계속 WA가 나왔다. 우산 개당 허용 가능한 사람 수가 1명이고, 사람 수가 우산 수보다 많을 경우만 고려했었는데, 우산 수가 1개만 아니면 가능한 경우가 있었다. 

### 시간복잡도

사람 수, 우산 수, 우산 개당 허용 사람 수가 전부 10 이하이다. 불가능한 경우를 제외하고는 한 사이클(창의→융합→창의) 시 창의인재관에서 최소 1명은 줄어들기 때문에, 모든 경우에 시행이 20번 이하로 줄어든다(1 사이클 == 2 시행).